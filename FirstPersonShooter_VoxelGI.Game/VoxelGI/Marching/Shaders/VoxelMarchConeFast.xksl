shader VoxelMarchConeFast<int steps, float stepScale, float coneRadius> : VoxelMarchMethod, VoxelRadiusMarchMethod, MarchAttributes
{
    override float4 March(float3 rayPos, float3 rayDir)
    {
        return MarchRadius(rayPos, rayDir, 1.0);
    }
    override float4 MarchRadius(float3 rayPos, float3 rayDir, float radiusScale)
    {
        float voxelSize = AttributeSamplers[AttributeID].VoxelSize();
        float dist = 0;
        float4 light = float4(0.0, 0.0, 0.0, 0.0);
        rayPos += voxelSize * rayDir;
        for (int i = 0; i < steps; i++)
        {
            float size = max(voxelSize, coneRadius * radiusScale * dist);
            float3 pos = rayPos + rayDir * dist;

            light += AttributeSamplers[AttributeID].SampleNearestMip(pos, -rayDir, size) * saturate(1.0 - light.a);

            dist += size * stepScale;
        }
        return light;
    }
    
    override float StepSize() { return AttributeSamplers[AttributeID].VoxelSize(); }
};