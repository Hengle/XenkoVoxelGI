// Copyright (c) Xenko contributors (https://xenko.com) and Silicon Studio Corp. (https://www.siliconstudio.co.jp)
// Distributed under the MIT license. See the LICENSE.md file in the project root for more information.
namespace Xenko.Rendering.Lights
{
    /// <summary>
    /// Defines a Voxel environment light
    /// </summary>
    shader LightVoxelShader : Camera, Texturing, EnvironmentLight, MaterialPixelShadingStream, NormalStream, PositionStream4, Transformation
    {
        cbuffer PerView.Lighting
        {
            float4x4 VoxelMatrix;
            float Intensity;
            float IntensityBounceScale;
        }

        compose IComputeVoxelColor lightDiffuseVoxelColor;
        
        float4 coneCast(float3 rayPos, float3 rayDir, float angle, float3 worldNor)
        {
            float voxelSize = 20.0 / 128.0;
            float dist = voxelSize;
            float3 startPos = rayPos + worldNor * voxelSize * 2;
            float4 light = float4(0.0,0.0,0.0,0.0);
            for( int i = 0 ; i < 11 ; i ++){
                float size = max(voxelSize ,angle*dist);
                float texsize = size / voxelSize;
            
                float3 texrayPos = mul(float4(startPos + rayDir * dist,1), VoxelMatrix).xyz;
                light += lightDiffuseVoxelColor.Compute(texrayPos, texsize) * saturate(1.0-light.a);
            
                dist += size * 0.5;
            }
            return light;
        }
        override void PrepareEnvironmentLight()
        {
            base.PrepareEnvironmentLight();

            float3 worldPos = streams.PositionWS;
          
            float3 tan = normalize(cross(streams.normalWS.xyz, normalize(float3(1,1,1))));
            float3 bitan = cross(tan, streams.normalWS.xyz);
            float3x3 tangentMatrix = float3x3(tan, bitan, streams.normalWS.xyz);
        
            float4 reflLighting = float4(0,0,0,0);
            float3 rayDir = float3(0,0,1);
            float conesize = 0.8;

            rayDir = mul(float3(-0.38,-0.37,0.84), tangentMatrix);
            reflLighting += coneCast(worldPos,rayDir,conesize,streams.normalWS.xyz) * 0.1475;
            rayDir = mul(float3(-0.31,0.43,0.84), tangentMatrix);
            reflLighting += coneCast(worldPos,rayDir,conesize,streams.normalWS.xyz) * 0.1475;
            rayDir = mul(float3(0.36,0.39,0.84), tangentMatrix);
            reflLighting += coneCast(worldPos,rayDir,conesize,streams.normalWS.xyz) * 0.1475;
            rayDir = mul(float3(0.36,-0.39,0.84), tangentMatrix);
            reflLighting += coneCast(worldPos,rayDir,conesize,streams.normalWS.xyz) * 0.1475;

            rayDir = mul(float3(-0.87,0.41,0.22), tangentMatrix);
            reflLighting += coneCast(worldPos,rayDir,conesize,streams.normalWS.xyz) * 0.0512;
            rayDir = mul(float3(-0.35,0.90,0.22), tangentMatrix);
            reflLighting += coneCast(worldPos,rayDir,conesize,streams.normalWS.xyz) * 0.0512;
            rayDir = mul(float3(0.40,0.88,0.22), tangentMatrix);
            reflLighting += coneCast(worldPos,rayDir,conesize,streams.normalWS.xyz) * 0.0512;
            rayDir = mul(float3(0.92,0.31,0.22), tangentMatrix);
            reflLighting += coneCast(worldPos,rayDir,conesize,streams.normalWS.xyz) * 0.0512;
            rayDir = mul(float3(0.87,-0.43,0.22), tangentMatrix);
            reflLighting += coneCast(worldPos,rayDir,conesize,streams.normalWS.xyz) * 0.0512;
            rayDir = mul(float3(0.30,-0.92,0.22), tangentMatrix);
            reflLighting += coneCast(worldPos,rayDir,conesize,streams.normalWS.xyz) * 0.0512;
            rayDir = mul(float3(-0.43,-0.87,0.22), tangentMatrix);
            reflLighting += coneCast(worldPos,rayDir,conesize,streams.normalWS.xyz) * 0.0512;
            rayDir = mul(float3(-0.93,-0.28,0.22), tangentMatrix);
            reflLighting += coneCast(worldPos,rayDir,conesize,streams.normalWS.xyz) * 0.0512;

            streams.envLightDiffuseColor = reflLighting.rgb * Intensity * 3.1415;//I don't understand why I need to multiply by pi here...
            if (FarClipPlane<1000)//Terrible...terrible hack. I set the FarClipPlane to 999.7 for the voxelization pass...
                streams.envLightDiffuseColor *= IntensityBounceScale;

            streams.envLightSpecularColor = float3(0,0,0);
        }
    };
}
