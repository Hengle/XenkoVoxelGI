namespace Xenko.Rendering.Voxels
{
    //TODO: Currently broken, is being kept around for its shader keys
    shader BufferToTexture : ComputeShaderBase, VoxelPositionStream, DataPacking
    {
        stage RWBuffer<uint> VoxelFragments;
        
        stage float3 clipMapResolution;

        stage float  storageUints;

        compose VoxelAttribute AttributesIndirect[];
        compose VoxelModifier Modifiers[];
        override void Compute()
        {
            int3 clipMapResolutionI = (int3)clipMapResolution;
            uint3 pos = streams.DispatchThreadId.xyz;
            
            streams.PositionVXPS = pos;
            streams.VoxelVolumeSize = clipMapResolution;

            uint VoxelFragmentsIndex = pos.x + pos.y * clipMapResolutionI.x + pos.z * clipMapResolutionI.x * clipMapResolutionI.y;
            uint zStride = clipMapResolutionI.x * clipMapResolutionI.y * (uint)storageUints;
            VoxelFragmentsIndex *= (uint)storageUints;
            uint initialVoxelFragmentsIndex = VoxelFragmentsIndex;

            foreach (var attr in Modifiers)
            {
                attr.SetupStreamsDummy();
            }
            foreach (var attr in AttributesIndirect)
            {
                attr.SetupStreamsDummy();
            }

            foreach (var attr in Modifiers)
            {
                attr.VoxelizeIndirectRead(VoxelFragments, VoxelFragmentsIndex, uint2(VoxelFragmentsIndex - VoxelFragmentsIndexOld + initialVoxelFragmentsIndex, yStride));
            }

            foreach (var attr in AttributesIndirect)
            {
                attr.VoxelizeIndirectRead(VoxelFragments, VoxelFragmentsIndex);
                attr.VoxelizeDirect(float3(0, clipMapResolutionI.y * clipIndex, 0) + streams.PositionVXPS, (int)clipMapResolutionI.y);
            }
        }
    };
}
