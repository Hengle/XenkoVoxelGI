namespace Xenko.Rendering.Voxels
{
    shader BufferToTextureColumns : ComputeShaderBase, VoxelPositionStream, DataPacking
    {
        [Link("BufferToTexture.VoxelFragments")]
        stage RWBuffer<uint> VoxelFragments;

        [Link("BufferToTexture.clipMapResolution")]
        stage float3 clipMapResolution;

        [Link("BufferToTexture.storageUints")]
        stage float storageUints;

        
        compose VoxelAttribute AttributesIndirect[];
        compose VoxelModifier Modifiers[];
        override void Compute()
        {
            int3 clipMapResolutionI = (int3)clipMapResolution;
            
            uint3 pos = streams.DispatchThreadId.xyz;
            uint clipIndex = streams.DispatchThreadId.y;

            pos.y = 0;
            streams.PositionVXPS = pos;
            streams.VoxelVolumeSize = clipMapResolutionI;

            uint wStride = clipMapResolutionI.x * clipMapResolutionI.y * clipMapResolutionI.z;
            uint VoxelFragmentsIndex = clipIndex * wStride + pos.x + pos.y * clipMapResolutionI.x + pos.z * clipMapResolutionI.x * clipMapResolutionI.y;
            VoxelFragmentsIndex *= (uint)storageUints;

            uint yStride = clipMapResolutionI.x * (uint)storageUints;
            uint initialVoxelFragmentsIndex = VoxelFragmentsIndex;

            foreach (var attr in Modifiers)
            {
                attr.SetupStreamsDummy();
            }
            foreach (var attr in AttributesIndirect)
            {
                attr.SetupStreamsDummy();
            }

            VoxelFragmentsIndex += (uint)storageUints * clipMapResolutionI.x;

            foreach (var attr in AttributesIndirect)
            {
                attr.VoxelizeDirect(streams.PositionVXPS, clipIndex, (int)clipMapResolutionI.y);
            }
            streams.PositionVXPS.y++;
            for (int i = 0; streams.PositionVXPS.y < clipMapResolutionI.y-1 ; streams.PositionVXPS.y ++)
            {
                uint VoxelFragmentsIndexOld = VoxelFragmentsIndex;

                foreach (var attr in Modifiers)
                {
                    attr.VoxelizeIndirectRead(VoxelFragments, VoxelFragmentsIndex, uint2(VoxelFragmentsIndex - VoxelFragmentsIndexOld + initialVoxelFragmentsIndex, yStride));
                }

                foreach (var attr in AttributesIndirect)
                {
                    attr.VoxelizeIndirectRead(VoxelFragments, VoxelFragmentsIndex);
                    attr.VoxelizeDirect(streams.PositionVXPS, clipIndex, (int)clipMapResolutionI.y);
                }
                VoxelFragmentsIndex = VoxelFragmentsIndexOld + (uint)storageUints * clipMapResolutionI.x;
            }
            foreach (var attr in Modifiers)
            {
                attr.SetupStreamsDummy();
            }
            foreach (var attr in AttributesIndirect)
            {
                attr.SetupStreamsDummy();
                attr.VoxelizeDirect(streams.PositionVXPS, clipIndex, (int)clipMapResolutionI.y);
            }
        }
    };
}
